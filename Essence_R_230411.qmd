---
title: "The Essence of R"
subtitle: "LU eScience Hub: Programming language day"
author: "Linda Hartman"
institute: Lund University
#date: "2023-04-11"
title-slide-attributes:
  data-background-image: "img/Universitetshusetvt201019.jpg"
  data-background-size: contain
  data-background-opacity: "0.3"
execute: 
  echo: true
format: 
  revealjs:
    smaller: false
    incremental: true 
    theme: white
editor: visual
---

##  {background-image="img/Rlogo.png" background-size="80px" background-position="top 10px right 10px"}

```{r}
#| echo: false
#| warning: false
#| message: false
#data("penguins", package = "palmerpenguins")
library(tidyverse)
library(gt)
options(width = 70)
```



::: {style="font-size: 1.5em; text-align: left"}
R
:::

-   a language and environment for statistical computing and graphics

-   R is best as a [statistical tool]{.fragment .highlight-red}, thus ideal for academics, scientists, engineers, economers,...

-   Core distribution and contributed libraries (19347 packages on March 31 2023)

-   Simplified workflow with Rstudio (IDE)

-   Very active community for development and support

![](img/RStudio.png){.fragment .absolute bottom="100px" right="0" height="180"}

##  {background-image="img/E-P5vPtXEA0MBYS.jpeg" background-size="contain"}

## Example: Penguins {.nonincremental}

::: columns
::: {.column width="50%"}
![Diagram of penguin head with indication of bill length and bill depth.](https://allisonhorst.github.io/palmerpenguins/reference/figures/culmen_depth.png)
:::

::: {.column width="50%"}
Contents:

-   Cleansing and prepping data

-   Descriptive statistics

-   Graphics

-   Modeling
:::
:::

## Cleansing and prepping data

::: nonincremental
-   The `tidyverse` package
:::

```{r}
penguins <- palmerpenguins::penguins
glimpse(penguins) #Quick overview
```
::: nonincremental
- If you noticed above, there was some NA or missing data. We can remove those rows for now.
:::

```{r}
penguins <- penguins %>% drop_na() 
```

## Descriptive statistics

::: {style="font-size: 30%;"}
```{r}
skimr::skim(penguins)
```
:::


## Descriptive statistics by group

::: {style="font-size: 30%;"}
```{r}
penguins %>% 
  group_by(species, sex) %>% 
  skimr::skim(-year) %>% 
  skimr::yank("numeric") %>% 
  kableExtra::kbl() %>% 
  kableExtra::collapse_rows(1:3)
```
:::

# Graphics

## Graphics: Distributions

```{r}
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| out-width: "50%"
penguins %>% 
  ggplot(aes(body_mass_g, fill = species)) + 
  geom_density(color = "white", alpha = 0.5) +
  scale_fill_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "Penguin Bins")
```

## Graphics: EDA

Exploratory Data Analysis as a first step towards developing a sensible model. But if we control for species quite different picture appear

## {auto-animate="true"}

```{r}
#| label: fig-simpsons-1
#| fig-cap: Bill length vs depth
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| out-width: "50%"
#| message: false
penguins %>% 
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm)) + 
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm")+
  labs(x = "Bill length (mm)", y = "Bill depth (mm)") 

```

## {auto-animate="true"}

```{r}
#| label: fig-simpsons-2
#| fig-cap: Bill length vs depth by species
#| fig-width: 8
#| fig-height: 4
#| fig-align: center
#| out-width: "50%"
#| message: false
penguins %>% 
  ggplot(aes(x = bill_length_mm, y = bill_depth_mm, color=species)) + 
  geom_point(size = 2, alpha = 0.8) +
  geom_smooth(method = "lm")+
  labs(x = "Bill length (mm)", y = "Bill depth (mm)") 

```


# Statistical models

## Linear regression

```{r}


```

## Logistic regression

```{r}


```

## Modeling section {background-color="black"}

Efficient to explore multiple relationships in data simultaneously. Just to indicate how you can fit some different models all at once with `dplyr` + `broom`.

## 

```{r}
model_inputs <- tibble(
  model_form = c(
    list(flipper_length_mm ~ body_mass_g),
    list(species ~ bill_length_mm + body_mass_g + sex),
    list(flipper_length_mm ~ bill_length_mm + species)
    ),
  data = list(penguins)
) 

model_metrics <- model_inputs %>% 
  rowwise(model_form, data) %>% 
  summarize(lm = list(lm(model_form, data = data)), .groups = "drop") %>% 
  rowwise(model_form, lm, data) %>% 
  summarise(broom::glance(lm), .groups = "drop")
```

## 

```{r}
model_metrics %>% 
  select(model_form, r.squared:p.value) %>% 
  mutate(model_form = as.character(model_form)) %>% 
  gt::gt() %>% 
  gt::fmt_number(r.squared:statistic) %>% 
  gt::fmt_scientific(p.value) %>% 
  gt::cols_width(
    model_form ~ px(150)
  )
```

# Machine learning

## Summary

-   a language and environment for statistical computing and graphics
-   including efficient data preparation and cleaning
-   excellent graphics

::: {style="font-size: 1rem;" .absolute bottom=0}
Palmer penguins code in large part from https://rstudio-conf-2022.github.io/get-started-quarto/
:::

## Add?

Example from Tetra Pak
